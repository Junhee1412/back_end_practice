===========================================================================================================
[Java]
    프로그래밍 언어이자 컴퓨팅 플랫폼. JVM(자바 가상 머신) 상에서 프로그램을 실행한다.
    ※ 프로젝트엔 [Java 1.8] 버전과 [Eclipse] 개발툴 사용

    [Spring Framework] - 자바 프레임워크
        khj93.tistory.com/entry/Spring-Spring-Framework란-기본-개념-핵심-정리
            ※ 간단설명
            자바 플랫폼을 위한 오픈소스 애플리케이션 프레임워크로서,
            엔터프라이즈급 애플리케이션을 개발하기 위한 모든 기능을 종합적으로 제공하는 경량화된 솔루션
            ※ 프로젝트엔 [Eclipse] 기반으로 동작하는 [Spring Tools Suite] 툴 사용

    [JDBC]
        Java DataBase Connectivity의 약자로, 자바에서 데이터베이스에 접속할 수 있도록 하는 API이다.
        ※ 프로젝트엔 Oracle DB를 사용하기 때문에, Oracle에서 제공하는 OJDBC 드라이버를 사용

    [MyBatis]
        자바에서 DB 프로그래밍을 좀 더 쉽게 할 수 있도록 도와주는 프레임워크로서,
        JDBC를 통해 DB에 액세스하는 작업을 캡슐화하여, 애플리케이션의 소스코드와 SQL를 완전히 분리시킨다.
        MyBatis를 사용하면 수동적인 파라미터 설정과 쿼리 결과에 대한 맵핑 등의 복잡한 JDBC 코드를 걷어내고 깔끔한 코드를 작성할 수 있다.
===========================================================================================================
[Database]
    컴퓨터 시스템에 전자 방식으로 저장된 구조화된 정보 또는 데이터의 체계적인 집합.
    보통 데이터베이스 관리 시스템(DBMS)에 의해 제어된다.
    대부분의 데이터베이스는 데이터 작성 및 쿼리 작업에 구조화 질의 언어(SQL)를 사용한다.
    ※ 프로젝트엔 [Oracle XE] 데이터베이스와 [Oracle SQL Developer] 개발툴을 사용
    ※ 개체-관계 다이어그램(ERD) 작성에는 [eXERD] 툴 사용
===========================================================================================================
[WAS]
    Web Application Server = Web Server + Web Container

    [웹 서버]
        HTTP 프로토콜을 기반으로 하여 클라이언트(웹 브라우저 또는 웹 크롤러)의 요청을 서비스하는 기능을 담당
        기능1) (WAS를 거치지 않고) 정적인 컨텐츠(HTML, CSS, 이미지파일 등) 제공
        기능2) 동적인 컨텐츠 제공을 위한 요청을 WAS에게 전달
    [웹 컨테이너]
        JSP, Servlet을 실행시킬 수 있는 소프트웨어이다.
        즉 WAS는 JSP, Servlet 구동 환경을 제공한다.
    [웹 서비스의 구조] - 다양한 구조를 가질 수 있음
        Client -> Web Server -> DB
        Client -> WAS -> DB
        Client -> Web Server -> WAS -> DB
    ※ 프로젝트엔 [Apache Tomcat] WAS를 사용
===========================================================================================================
[마크업 언어]
    태그 등을 이용하여 문서나 데이터의 구조를 명기하는 언어
    일반적으로 데이터를 기술하는 정도로만 사용되기에 '프로그래밍 언어'와는 구별된다.

[스크립트 언어]
    프로그래밍 언어의 일종으로, 이미 존재하는 애플리케이션을 제어하는 용도로 쓰이는 언어
===========================================================================================================
[HTML]
    HyperText Markup Language의 약자로, 웹 페이지를 작성하기 위한 마크업 언어
    웹 브라우저의 행동에 영향을 주는 [자바스크립트]와, 웹 페이지의 외관과 배치를 정의하는 [CSS]
    와 같은 스크립트를 포함하거나 불러올 수 있다.

[CSS]
    Cascading Style Sheets의 약자로, 마크업 언어(HTML, XHTML, XML 등)가 실제 표시되는 방법을 기술하는 언어이다.
    마크업 언어(HTML)가 웹사이트의 몸체를 담당한다면 CSS는 옷과 액세서리처럼 꾸미는 역할을 담당한다고 할 수 있다.
    즉, HTML 구조는 그대로 두고 CSS 파일만 변경해도 전혀 다른 웹사이트처럼 꾸밀 수 있다.

[JavaScript]
    객체지향 스크립트 언어로, 웹 브라우저 내에서 주로 사용한다. (거의 모든 웹 브라우저에 자바스크립트 실행을 위한 인터프리터가 내장되어 있다.)
    클라이언트 단에서 웹 페이지가 동작하는 것을 자바스크립트가 담당한다.

    [jQuery]
        HTML의 클라이언트 사이드 조작을 단순화 하도록 설계된 크로스 플랫폼의 자바스크립트 라이브러리
        jQuery의 문법은 코드 보기, 문서 객체 모델 찾기, 애니메이션 만들기, 이벤트 제어, Ajax 개발을 쉽게 할 수 있도록 디자인됨

[Ajax]
    Asynchronous Javascript And XML의 약자로, 말 그대로 'JavaScript와 XML을 이용한 비동기적 정보 교환 기법'이다.
    오늘날에는 XML 대신 JSON을 주로 사용하며, 텍스트가 아닌 데이터도 Ajax를 통해 전송할 수 있다.
    Ajax는 그 자체로 하나의 특정한 기술이 아니라 웹 개발 기법의 일종이다.
    ※ 작동 방식
        Ajax는 웹 페이지의 디자인 요소와 정보 요소를 분리한다.
        처음 사이트에 접속하면 웹 서버는 HTML 파일, CSS 파일, JavaScript 파일을 전달한다.
        브라우저는 일단 이 내용으로 페이지의 기본적인 골격을 구축해 놓는다.
        그리고 골격의 구축이 끝나면 브라우저는 전달받은 JavaScript를 실행해서 서버에 데이터만을 별도로 요청한다.
        이 때 서버에서 주는 응답은 순수한 데이터 객체(XML 또는 JSON 등)이다.
        브라우저가 이 데이터를 수신하면 미리 만들어 둔 틀 안에 적절한 방법으로 데이터를 끼워 넣는다.
        즉, Ajax를 이용하면 페이지 전체를 새로고침하지 않고 데이터 영역만을 변경하는 동적 페이지를 구축할 수 있다.

[Bootstrap]
    프론트엔드 웹 개발을 위한 오픈소스 UI 프레임워크로서, 정형화된 웹페이지 개발에 유용하게 쓰인다.
    HTML, CSS, JavaScript로 구성되어 있으며, jQuery 라이브러리를 사용할 수 있다.
    

[Java Servlet]

[JSP]
    Java Server Pages의 약자로, 웹 서버에서 동적으로 웹 페이지를 생성하여 웹브라우저가 표현할 수 있도록 전달해 주는 스크립트 언어
    HTML 페이지 안에 자바(Java) 코드를 직접 삽입하는 형식으로 사용한다.
    ※ 프로젝트에선 [Apache Tomcat]이 [JSP]를 사용하여 동적 페이지를 처리한다.
===========================================================================================================