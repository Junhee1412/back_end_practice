let  mysql = require('mysql');
let  dbconnInfo = {
        host: 'dowtop.cgeekfeeuj9f.ap-northeast-2.rds.amazonaws.com',
        port: '3306',
        user: 'admin',
        password: 'downtop6318',
        database: 'downtop',
        multipleStatements: true,
        dateStrings : [ 
            'DATE', 
            'DATETIME' 
        ] 
    }


function handleDisconnect() {
    dbconnection = mysql.createConnection(dbconnInfo.dev); // Recreate the connection, since
    // the old one cannot be reused.

    dbconnection.connect(function (err) {              // The server is either down
        if (err) {                                     // or restarting (takes a while sometimes).
            console.log('error when connecting to db:', err);
            setTimeout(handleDisconnect, 2000); // We introduce a delay before attempting to reconnect,
        }                                     // to avoid a hot loop, and to allow our node script to
    });                                     // process asynchronous requests in the meantime.
    // If you're also serving http, display a 503 error.
    dbconnection.on('error', function (err) {
        console.log('db error', err);
        if (err.code === 'PROTOCOL_CONNECTION_LOST') { // Connection to the MySQL server is usually
            handleDisconnect();                         // lost due to either server restart, or a
        } else {                                      // connnection idle timeout (the wait_timeout
            throw err;                                  // server variable configures this)
        }
    });
}

handleDisconnect();

db.login = function (company) {
    return new Promise(function (resolve, reject) {
        dbconnection.query("SELECT * From Company WHERE CompanyID = '" + company.id + "' and CompanyPW = '" + company.pw + "'", function (error, result, fields) {
            try {
                if (error) {
                    reject(errorProcess("login", error, company))
                } else {
                    let  data = new Object();
                    data = EC(result);
                    if (data.length > 0) {
                        data[0].lastVersion = company.lastVersion;
                        data[0].lastAccessIPAddress = company.lastAccessIPAddress;

                    }
                    resolve(data);
                }
            } catch (e) {
                reject(errorProcess("login", e, company))
            }

        });
    });
}